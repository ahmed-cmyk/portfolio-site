name: Deploy Svelte App to Server

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build the Svelte application
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Svelte project
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: svelte-dist
          path: build/
          retention-days: 1 # How long to keep the artifacts (optional)

  # Job 2: Deploy the built Svelte application to the server
  deploy:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: svelte-dist
          path: . # Downloads the artifact to the current directory

      - name: Deploy built files via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/*"
          target: ${{ secrets.DEPLOY_PATH }}
          rm: true

  # Job 3: Verify the deployment on the server
  verify:
    runs-on: ubuntu-latest
    needs: deploy # This job depends on the 'deploy' job completing successfully
    steps:
      - name: Verify deployment on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Deployment successful! Verifying files in ${{ secrets.DEPLOY_PATH }}..."
            ls -la ${{ secrets.DEPLOY_PATH }}
            # You might want to also check for specific files, e.g.,
            # ls -la ${{ secrets.DEPLOY_PATH }}/index.html
            # Or perform a health check on a running server, e.g.,
            # curl -f http://${{ secrets.SSH_HOST }} || { echo "Health check failed!"; exit 1; }
